name: build

on:
  push:
    branches:
      - main
      - 'renovate/**'

  pull_request:

env:
  VERSION: v0
  NODE_VERSION: 12
  YARN_CACHE_KEY: v0
  YARN_CACHE_FOLDER: .cache/yarn
  # https://github.com/chalk/supports-color/issues/106
  FORCE_COLOR: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0

      - name: Cache Yarn packages
        id: yarn_cache_packages
        uses: actions/cache@4723a57e26efda3a62cbde1812113b730952852d # v3.2.2
        with:
          path: ${{ env.YARN_CACHE_FOLDER }}
          key: ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-yarn_cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-yarn_cache-

      - name: Cache node_modules
        uses: actions/cache@4723a57e26efda3a62cbde1812113b730952852d # v3.2.2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-yarn-

      # Clear caches on cache miss, otherwise they will grow indefinitely
      - name: Clear yarn cache
        if: steps.yarn_cache_packages.outputs.cache-hit != 'true' && github.ref == 'refs/heads/main'
        run: yarn cache clean

      - run: yarn install --frozen-lockfile

  test:
    needs: prepare
    runs-on: ubuntu-latest

    # tests shouldn't need more than 15 min
    timeout-minutes: 15

    steps:
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Init platform
        id: init
        shell: bash
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          git config --global user.email 'bot@renovateapp.com'
          git config --global user.name  'Renovate Bot'
          echo "Node $(node --version)"
          echo "Yarn $(yarn --version)"

      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0

      - name: Cache Yarn packages
        id: yarn_cache_packages
        uses: actions/cache@4723a57e26efda3a62cbde1812113b730952852d # v3.2.2
        with:
          path: ${{ env.YARN_CACHE_FOLDER }}
          key: ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-yarn_cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-yarn_cache-

      - name: Cache node_modules
        uses: actions/cache@4723a57e26efda3a62cbde1812113b730952852d # v3.2.2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-

      - run: yarn install --frozen-lockfile

      - run: yarn lint

      - run: yarn compile

      # - run: yarn jest --maxWorkers=2 --ci --coverage

      # - name: Upload coverage
      #   uses: actions/upload-artifact@v2.2.0
      #   if: always()
      #   with:
      #     name: coverage
      #     path: coverage

      # - name: Codecov
      #   shell: bash
      #   if: always()
      #   continue-on-error: true
      #   run: bash <(curl -s https://codecov.io/bash)
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  # e2e:
  #   needs: prepare
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 10

  #   steps:
  #     - name: Set up Node.js ${{ env.NODE_VERSION }}
  #       uses: actions/setup-node@v1.4.4
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}

  #     - uses: actions/checkout@v2.3.3

  #     - name: Cache Yarn packages
  #       id: yarn_cache_packages
  #       uses: actions/cache@v2.1.2
  #       with:
  #         path: ${{ env.YARN_CACHE_FOLDER }}
  #         key: ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-yarn_cache-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-yarn_cache-

  #     - name: Cache node_modules
  #       uses: actions/cache@v2.1.2
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-${{ matrix.node-version }}-yarn-

  #     - run: yarn install --frozen-lockfile

  #     - run: yarn compile

  #     - name: docker-config
  #       uses: ./
  #       with:
  #         command: docker-config

  #     - name: Prepare e2e
  #       run: |
  #         docker pull alpine
  #         docker tag alpine renovate/ubuntu
  #         docker tag alpine renovate/ubuntu:18.04

  #     - name: docker-builder (node)
  #       uses: ./
  #       with:
  #         command: docker-builder
  #         image: node
  #         config: e2e/node.json
  #         dry-run: true
  #         prune: true

  #     - name: docker-builder (yarn)
  #       uses: ./
  #       with:
  #         command: docker-builder
  #         config: e2e/yarn.json
  #         dry-run: true

  #     - name: docker-builder (python)
  #       uses: ./
  #       with:
  #         command: docker-builder
  #         config: e2e/python.json
  #         tag-suffix: 'slim'
  #         build-args: 'IMAGE=slim'
  #         dry-run: true

  #     - name: docker-builder (renovate)
  #       uses: ./
  #       with:
  #         command: docker-builder
  #         config: e2e/renovate.json
  #         dry-run: true

  #     - name: docker-builder (ubuntu)
  #       uses: ./
  #       with:
  #         command: docker-builder
  #         config: e2e/ubuntu.json
  #         dry-run: true

  #     - name: dummy-command
  #       uses: ./
  #       with:
  #         command: dummy
  #         dry-run: true

  # release:
  #   needs: [test, e2e]
  #   runs-on: ubuntu-latest

  #   # tests shouldn't need more than 15 min
  #   timeout-minutes: 15

  #   steps:
  #     - name: Set up Node.js ${{ env.NODE_VERSION }}
  #       uses: actions/setup-node@v1.4.4
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}

  #     - name: Init platform
  #       id: init
  #       shell: bash
  #       run: |
  #         git config --global core.autocrlf false
  #         git config --global core.symlinks true
  #         git config --global user.email 'bot@renovateapp.com'
  #         git config --global user.name  'Renovate Bot'
  #         yarn config set version-git-tag false

  #     - uses: actions/checkout@v2.3.3

  #     - name: Cache Yarn packages
  #       id: yarn_cache_packages
  #       uses: actions/cache@v2.1.2
  #       with:
  #         path: ${{ env.YARN_CACHE_FOLDER }}
  #         key: ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-yarn_cache-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-yarn_cache-

  #     - name: Cache node_modules
  #       uses: actions/cache@v2.1.2
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-

  #     - run: yarn install --frozen-lockfile

  #     - run: yarn lint

  #     - run: yarn compile

  #     - name: Prepare
  #       run: |
  #         git checkout -b ${VERSION}
  #         git add -f dist/*
  #         git commit -m 'Published by pipeline'

  #     - name: Publish
  #       if: ${{github.ref == 'refs/heads/main'}}
  #       run: |
  #         git push -f origin ${VERSION}:${VERSION}
